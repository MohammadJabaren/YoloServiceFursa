name: Polybot Deploy Dev

on:
  workflow_call:
    inputs:
      image:
        required: true
        type: string
    secrets:
      SSH_PRIVATE_KEY:
        required: true
      EC2_DEV_HOST:
        required: true
      EC2_USERNAME:
        required: true
      AWS_S3_BUCKET_DEV:
        required: true

  workflow_dispatch:
    inputs:
      image:
        required: true
        type: string

env:
  REPO_URL: ${{ github.server_url }}/${{ github.repository }}.git
  REPO_NAME: ${{ github.event.repository.name }}

jobs:
  Deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure SSH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          EC2_HOST: ${{ secrets.EC2_DEV_HOST }}
          EC2_USERNAME: ${{ secrets.EC2_USERNAME }}
          AWS_S3_BUCKET_DEV: ${{secrets.AWS_S3_BUCKET_DEV}}

        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/private_key
          chmod 600 ~/.ssh/private_key
          cat > ~/.ssh/config << EOF
          Host ec2
              HostName $EC2_HOST
              User $EC2_USERNAME
              IdentityFile ~/.ssh/private_key
              StrictHostKeyChecking no
          EOF

      - name: Execute script on EC2
        run: |
          # Generate .env file. 
          echo "This is the image name :- ${{ inputs.image }}"
          echo "IMG_NAME=mohammadjabaren${{ inputs.image }}" > .env
          echo "AWS_S3_BUCKET=${{ secrets.AWS_S3_BUCKET_DEV }}" >> .env

          # Send .env and compose file to EC2
          scp .env docker-compose.dev.yaml ec2:~/

          # SSH into EC2 and run install + deploy
          ssh ec2 '

            sudo apt-get update

            if ! command -v docker &> /dev/null; then
              echo "Installing Docker..."
              sudo apt-get update
              sudo apt-get install -y ca-certificates curl
              sudo install -m 0755 -d /etc/apt/keyrings
              sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
              sudo chmod a+r /etc/apt/keyrings/docker.asc

              echo \
                "deb [arch=\$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
                \$(. /etc/os-release && echo \${UBUNTU_CODENAME:-\$VERSION_CODENAME}) stable" | \
                sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

              sudo apt-get update
              sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
            else
              echo "Docker already installed."
            fi

            if ! command -v docker &> /dev/null; then
              echo "Docker installation failed or not found. Exiting."
              exit 1
            fi

            echo "Starting Docker Compose services..."
            sudo docker compose -f docker-compose.dev.yaml pull
            sudo docker compose -f docker-compose.dev.yaml up -d
          '
